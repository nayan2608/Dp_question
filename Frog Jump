// memoization 
// Tc - O(n)   Sc - O(n)

#include<bits/stdc++.h>
int go(int i,vector<int>&heights,vector<int>&dp){
    if(i==0)return 0;
    if(dp[i]!=-1){
        return dp[i];
    }
    int left=go(i-1,heights,dp)+abs(heights[i]-heights[i-1]);
    int right=INT_MAX;
    if(i>1){
        right=go(i-2,heights,dp)+abs(heights[i]-heights[i-2]);
    }
    return dp[i]=min(left,right);
}
int frogJump(int n, vector<int> &heights)
{
    // Write your code here.
    vector<int>dp(n+1,-1);
    return go(n-1,heights,dp);
}


//  Space optimization 
//  Tc - O(n)    Sc - O(1)

#include<bits/stdc++.h>
int frogJump(int n, vector<int> &heights)
{
    int prev=0;
    int prev2=0;
    int i;
    
    for(i=1;i<n;i++){
        int first=prev+abs(heights[i]-heights[i-1]);
        int second=INT_MAX;
        if(i>1){
            second=prev2+abs(heights[i]-heights[i-2]);
        }
        int current=min(first,second);
        prev2=prev;
        prev=current;
    }
    return prev;
}
