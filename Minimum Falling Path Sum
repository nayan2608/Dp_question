// Tc - O(n*n)  Sc - O(n*n)

#include<bits/stdc++.h>
int minFallingPathSum(vector<vector<int>> &vec, int n) {
    int i,j,mi=INT_MAX;
    vector<vector<int>>dp(n,vector<int>(n));
    for(i=0;i<n;i++){
        dp[0][i]=vec[0][i];
    }
    for(i=1;i<n;i++){
        for(j=0;j<n;j++){
            int left=INT_MAX,up=INT_MAX,right=INT_MAX;
            up=dp[i-1][j];
            if(j>0) left=dp[i-1][j-1];
            if(j<n-1) right=dp[i-1][j+1];
            dp[i][j]=vec[i][j]+min({up,left,right});
            if(i==n-1){
                mi=min(mi,dp[i][j]);
            }
        }
    }
    return mi;
}

// Tc - O(n*n)  Sc - O(n)

#include<bits/stdc++.h>
int minFallingPathSum(vector<vector<int>> &vec, int n) {
    int i,j,mi=INT_MAX;
    vector<int>dp(n);
    for(i=0;i<n;i++){
        dp[i]=vec[0][i];
    }
    for(i=1;i<n;i++){
        int up=dp[0],right=dp[1],left=INT_MAX;
        for(j=0;j<n;j++){
            dp[j]=vec[i][j]+min({up,left,right});
            left=up;
            up=right;
            if(j<n-2){
                right=dp[j+2];
            }
            else{
                right=INT_MAX;
            }
            if(i==n-1){
                mi=min(mi,dp[j]);
            }
        }
        
    }
    return mi;
}
